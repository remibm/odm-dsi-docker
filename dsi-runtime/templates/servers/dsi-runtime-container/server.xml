
<server description="dsi-runtime-container">

   <featureManager>
        <feature>appSecurity-2.0</feature>
        <feature>restConnector-2.0</feature>
        <feature>ssl-1.0</feature>
        <feature>ia:iaRuntime-_DSI_VERSION_</feature>
        <feature>ia:iaDispatcher-_DSI_VERSION_</feature>
        <feature>ia:iaAnalytics-_DSI_VERSION_</feature>
    </featureManager>

    <logging
        traceSpecification="com.ibm.ia.*=info:com.ibm.rules.*=info:*=info"
        maxFiles="5" />

    <httpEndpoint
        id="defaultHttpEndpoint"
        host="*"
        httpPort="${http.port}"
        httpsPort="${https.port}" />

    <xioEndpoint
        port="${ia.listenerPort}"/>

    <elasticCache
       name="${ia.host}-${wlp.server.name}"
       catalogClusterRef="ccid"
       enableMBean="true" />

    <elasticCacheCatalogCluster id="ccid">
        <!--  *TODO* Add catalog server with relevant host and port values.
        <server host="*INSERT_CATALOG01_HOST*" port="*INSERT_CATALOG01_PORT*"/>
        <server host="*INSERT_CATALOG02_HOST*" port="*INSERT_CATALOG02_PORT*"/>
        <server host="*INSERT_CATALOG03_HOST*" port="*INSERT_CATALOG03_PORT*"/>
        -->
        <server host="DSI_CATALOG_HOSTNAME" port="2809"/>
    </elasticCacheCatalogCluster>

    <gridApplication
        location="${server.config.dir}/grids" />

    <remoteFileAccess>
        <!-- solutionManager and connectivityManager remote deployment
             require remote write access to the server output directory -->
        <writeDir>${server.output.dir}</writeDir>
    </remoteFileAccess>

    <serverCommands
        startServerTimeout="120"
        stopServerTimeout="120" />

    <ia_runtime solutionAutoStart="false"/>

    <ssl id="defaultSSLConfig"
        keyStoreRef="defaultKeyStore"
        sslProtocol="TLSv1.2" />

    <keyStore
        id="defaultKeyStore"
        password="${ia.test.password}" />

    <httpSession securityIntegrationEnabled="false"/>

    <quickStartSecurity
        userName="${ia.test.user}"
        userPassword="${ia.test.password}" />

    <authorization-roles id="iaAuthorization">
        <security-role name="iaRESTWriter">
            <special-subject type="EVERYONE" />
        </security-role>
        <security-role name="iaRESTReader">
            <special-subject type="EVERYONE" />
        </security-role>
        <security-role name="iaHTTPGatewaySubmitter">
            <special-subject type="EVERYONE" />
        </security-role>
        <security-role name="iaSolutionDeveloper">
            <special-subject type="EVERYONE" />
        </security-role>
    </authorization-roles>
</server>
